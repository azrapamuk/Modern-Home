@using Microsoft.AspNetCore.Identity
@using ModernHome.Data;

@model IEnumerable<ModernHome.Models.Ocjena>
@inject UserManager<IdentityUser> UserManager
@inject SignInManager<IdentityUser> SignInManager
@inject ApplicationDbContext _context;




@{
    var currentUserId = await UserManager.GetUserAsync(User);
    var korisnik = await UserManager.GetUserIdAsync(currentUserId);
    //var username = await UserManager.GetUserNameAsync(currentUserId);
    var isAdmin = User.IsInRole("Administrator");
    async Task<string> GetUserNameAsync(string userId)
    {
        var user = await UserManager.FindByIdAsync(userId);
        return user?.UserName;
    }
}

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<table class="table">
    <thead>
        <tr>
            <th>
                ID Filma
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ocjena)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.komentar)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.datum)
            </th>
            <th>
                @if (User.IsInRole("Administrator")){

                @Html.DisplayNameFor(model => model.Idkorisnik)
                }
            </th>
            <th>
                Korisnicko ime
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                    @((await _context.Artikal.FindAsync(item.Idartikal))?.naziv ?? "-")
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ocjena)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.komentar)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.datum)
            </td>
            <td>
                @if (User.IsInRole("Administrator"))
                {
                @Html.DisplayFor(modelItem => item.Idkorisnik)
                }
            </td>
                <td>
                    @{
                        var username = await GetUserNameAsync(item.Idkorisnik);
                        @username
                    }
                </td>
            <td>
                @if (@SignInManager.UserManager.Users.First(user => user.UserName == User.Identity.Name).Id == item.Idkorisnik || isAdmin){
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> 
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> 
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                }
            </td>
        </tr>
}
    </tbody>
</table>
