@using Microsoft.AspNetCore.Identity
@model IEnumerable<ModernHome.Models.Ocjena>
@inject UserManager<IdentityUser> UserManager
@inject SignInManager<IdentityUser> SignInManager



@{
    if (SignInManager.IsSignedIn(User))
    {
        var currentUserId = await UserManager.GetUserAsync(User);
        var korisnik = await UserManager.GetUserIdAsync(currentUserId);
        //var username = await UserManager.GetUserNameAsync(currentUserId);

    }
    var isAdmin = User.IsInRole("Administrator");
    async Task<string> GetUserNameAsync(string userId)
    {
        var user = await UserManager.FindByIdAsync(userId);
        return user?.UserName;
    }

}
@{

    ViewData["Title"] = "OcjeneArtikla";

}

<h1>Ocjene artikla</h1>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ocjena)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.komentar)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.datum)
            </th>
            <th>
                @if (User.IsInRole("Administrator"))
                {

                    @Html.DisplayNameFor(model => model.Idkorisnik)
                }
            </th>
            <th>
                Korisnicko ime
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ocjena)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.komentar)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.datum)
                </td>
                <td>
                    @if (User.IsInRole("Administrator"))
                    {
                        @Html.DisplayFor(modelItem => item.Idkorisnik)
                    }
                </td>
                <td>
                    @{
                        var username = await GetUserNameAsync(item.Idkorisnik);
                        @username
                    }
                </td>
                <td>
                    @if (User.IsInRole("Administrator") || User.IsInRole("Korisnik"))
                    {
                        @if (@SignInManager.UserManager.Users.First(user => user.UserName == User.Identity.Name).Id == item.Idkorisnik || isAdmin)
                        {
                            <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                            <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                        }
                    }<a asp-action="Details" asp-route-id="@item.Id">Details</a>


                </td>

            </tr>
        }
        <a asp-controller="Artikal" asp-action="Details" asp-route-id="@ViewBag.ocjenaid">Back to list</a>
    </tbody>
</table>

